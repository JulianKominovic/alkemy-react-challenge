{"version":3,"sources":["context/AuthContext.tsx","hooks/useAuthentication.ts","components/AuthInputGroup.tsx","schemas/YupSchemas.ts","components/AuthForm.tsx","services/loginApi.ts","pages/Login.tsx","components/AuthRouteComponent.tsx","components/CustomNavbar.tsx","services/localStorage.ts","components/HomeStats.tsx","context/HeroesListContext.jsx","hooks/useHeroesList.ts","components/SuperHeroSmallCard.tsx","hooks/useTeamStats.ts","pages/Home.jsx","components/SearchForm.tsx","utils/getBestStatOfHero.ts","components/AddOrRemoveButton.tsx","components/SuperHeroBigCard.tsx","services/apiCalls.ts","pages/Search.tsx","components/HeroFeatureList.tsx","pages/Details.tsx","App.tsx","index.tsx"],"names":["isAnyTokenOnLS","window","localStorage","getItem","AuthContext","createContext","userName","setUserName","user","console","log","isAuth","setIsAuth","AuthProvider","children","useState","Provider","value","useAuthentication","useContext","authorizeUser","token","setItem","setUser","name","AuthInputGroup","handleSubmit","handleChange","handleBlur","values","errors","touched","showErrorLogging","Form","className","onSubmit","Group","Label","Control","id","type","onBlur","onChange","email","Alert","variant","style","overflowWrap","password","Button","SignupSchema","Yup","shape","required","SearchingSchema","search","min","max","matches","AuthForm","setShowErrorLogging","sendingAuthData","setSendingAuthData","history","useHistory","Spinner","animation","role","initialValues","axios","method","url","data","then","res","catch","error","response","authUser","castedResponse","undefined","replace","validationSchema","props","Login","to","Stack","gap","maxWidth","height","AuthRouteComponent","CustomNavbar","Navbar","collapseOnSelect","expand","bg","Container","Toggle","aria-controls","Collapse","Nav","Link","href","rel","target","fontSize","eventKey","onClick","removeItem","location","reload","HomeStats","stat","heroesList","ListGroup","Item","property","charAt","toUpperCase","slice","ProgressBar","length","now","parseInt","label","HeroesListContext","HeroesListProvider","JSON","parse","setHeroesList","filter","hero","biography","alignment","numberOfGoodHeroes","setNumberOfGoodHeroes","numberOfBadHeroes","setNumberOfBadHeroes","useEffect","heroes","stringify","useHeroesList","addHeroToList","verifyNewHeroStatus","map","heroLocal","indexOf","verifyNewHero","prev","removeHeroById","findIndex","toString","isHeroOnTeam","SuperHeroSmallCard","imageUrl","Col","textDecoration","Card","cursor","minWidth","Img","objectFit","opacity","src","alt","Body","objectPosition","Title","position","text","border","Badge","Row","useTeamStats","avgStats","recalculateStats","forEach","prop","powerstats","sort","next","recalculateAvgWeight","weightAccumulator","appearance","weight","recalculateAvgHeight","heightAccumulator","HEROES_SLOTS","Home","fluid","Header","as","indexHero","i","image","Math","round","SearchForm","setSearchDone","setIsSearching","isSearching","setSearchingResult","searchingParam","placeholder","size","aria-hidden","getBestStatOfHero","sortArray","Object","entries","a","b","statPrev","statCurr","AddOrRemoveButton","addedMessage","setAddedMessage","timeout","setTimeout","clearTimeout","SuperHeroBigCard","showDetails","setShowDetails","width","Text","ListGroupItem","publisher","left","top","require","config","Search","params","useParams","setHeroes","searchDone","searchingResult","validate","get","searchHero","results","err","HeroFeatureList","Details","setHero","status","setStatus","Subtitle","placeContent","work","textAlign","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35f4cdd.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\ninterface AuthInterface {\r\n  userName: string;\r\n  setUserName: (user: string) => void;\r\n  isAuth: boolean;\r\n  setIsAuth: (auth: boolean) => void;\r\n}\r\n\r\nconst isAnyTokenOnLS = () => {\r\n  return window.localStorage.getItem(\"token\") !== null;\r\n};\r\n\r\nexport const AuthContext = createContext<AuthInterface>({\r\n  userName: \"\",\r\n  setUserName: (user: string) => console.log(\"Auth context\"),\r\n  isAuth: isAnyTokenOnLS(),\r\n  setIsAuth: (isAuth: boolean) => console.log(\"Is Auth\"),\r\n});\r\n\r\nexport const AuthProvider: React.FunctionComponent = ({ children }) => {\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [isAuth, setIsAuth] = useState(isAnyTokenOnLS());\r\n  return (\r\n    <AuthContext.Provider value={{ userName, setUserName, isAuth, setIsAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport default function useAuthentication() {\r\n  const { isAuth, setIsAuth, setUserName, userName } = useContext(AuthContext);\r\n\r\n  const authorizeUser = (token: string) => {\r\n    window.localStorage.setItem(\"token\", token);\r\n    setIsAuth(true);\r\n  };\r\n  const setUser = (name: string) => setUserName(name);\r\n  return {\r\n    userName,\r\n    isAuth,\r\n    authorizeUser,\r\n    setUser,\r\n  };\r\n}\r\n","import { Form, Button, Alert } from \"react-bootstrap\";\r\n\r\ninterface AuthInputsProps {\r\n  handleSubmit: any;\r\n  handleChange: any;\r\n  handleBlur: any;\r\n  values: any;\r\n  errors: any;\r\n  touched: any;\r\n  showErrorLogging: boolean;\r\n  setUser: (arg0: string) => void;\r\n}\r\n\r\nconst AuthInputGroup = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  handleBlur,\r\n  values,\r\n  errors,\r\n  touched,\r\n  showErrorLogging,\r\n  setUser,\r\n}: AuthInputsProps) => {\r\n  return (\r\n    <Form className=\"px-4 container-sm \" onSubmit={handleSubmit}>\r\n      <Form.Group className=\"my-4\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.email}\r\n        ></Form.Control>\r\n\r\n        <Alert variant=\"info\" className=\"py-1 my-1\">\r\n          Psss just type:{\" \"}\r\n          <b style={{ overflowWrap: \"break-word\" }}>challenge@alkemy.org</b>\r\n        </Alert>\r\n\r\n        {errors.email && touched.email ? (\r\n          <Alert variant=\"danger\" className=\"p-2 my-2\">\r\n            {errors.email}\r\n          </Alert>\r\n        ) : null}\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          value={values.password}\r\n        ></Form.Control>\r\n\r\n        <Alert variant=\"info\" className=\"py-1 my-1\">\r\n          Psss just type: <b style={{ overflowWrap: \"break-word\" }}>react</b>\r\n        </Alert>\r\n\r\n        {errors.password && touched.password ? (\r\n          <Alert variant=\"danger\" className=\"p-2 my-2\">\r\n            {errors.password}\r\n          </Alert>\r\n        ) : null}\r\n      </Form.Group>\r\n      <div className=\"d-grid\">\r\n        <Button variant=\"primary\" className=\"my-4\" type=\"submit\">\r\n          Log in\r\n        </Button>\r\n      </div>\r\n      {showErrorLogging ? (\r\n        <div className=\"d-grid\">\r\n          <Alert variant=\"danger\">\r\n            Your email or password are incorrect. Try again.\r\n          </Alert>\r\n        </div>\r\n      ) : null}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AuthInputGroup;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const SignupSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nexport const SearchingSchema = Yup.object().shape({\r\n  search: Yup.string()\r\n    .required(\"Seach something...\")\r\n    .min(3, \"Too short.\")\r\n    .max(50, \"Too long.\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Only alphabets are allowed.\"),\r\n});\r\n","import { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { authUser } from \"../services/loginApi\";\r\nimport useAuthentication from \"../hooks/useAuthentication\";\r\nimport AuthInputGroup from \"./AuthInputGroup\";\r\nimport { SignupSchema } from \"../schemas/YupSchemas\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface ResponseAuthTemplate {\r\n  token?: string;\r\n}\r\n\r\nconst AuthForm = () => {\r\n  const { setUser, authorizeUser } = useAuthentication();\r\n  const [showErrorLogging, setShowErrorLogging] = useState<boolean>(false);\r\n  const [sendingAuthData, setSendingAuthData] = useState<boolean>(false);\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      {!sendingAuthData ? (\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={({ email, password }) => {\r\n            setSendingAuthData(true);\r\n            authUser(email, password).then((res) => {\r\n              const castedResponse = res as ResponseAuthTemplate;\r\n              if (castedResponse.token !== undefined) {\r\n                authorizeUser(castedResponse.token);\r\n                history.replace(\"/\");\r\n              } else {\r\n                setShowErrorLogging(true);\r\n                setSendingAuthData(false);\r\n              }\r\n            });\r\n          }}\r\n          validationSchema={SignupSchema}\r\n        >\r\n          {(props) => (\r\n            <AuthInputGroup\r\n              {...props}\r\n              showErrorLogging={showErrorLogging}\r\n              setUser={setUser}\r\n            />\r\n          )}\r\n        </Formik>\r\n      ) : (\r\n        <Spinner animation=\"border\" role=\"status\" className=\"align-self-center\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import axios from \"axios\";\r\n\r\nexport const authUser = (email: string, password: string) => {\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"https://heroes-alkemy.herokuapp.com/api/login\",\r\n    data: {\r\n      email: email,\r\n      password: password,\r\n    },\r\n  })\r\n    .then((res) => res.data)\r\n    .catch((error) => error.response.data);\r\n};\r\n","import { Stack } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport useAuthentication from \"../hooks/useAuthentication\";\r\n\r\nconst Login = (): JSX.Element => {\r\n  const { isAuth } = useAuthentication();\r\n  return (\r\n    <>\r\n      {isAuth ? <Redirect to=\"/\" /> : null}\r\n      <div className=\"p-4 vh-100 d-flex\">\r\n        <Stack\r\n          gap={3}\r\n          className=\"border border-2 rounded-3 mx-auto w-100 align-self-center p-4 shadow-sm\"\r\n          style={{\r\n            maxWidth: \"400px\",\r\n            height: \"fit-content\",\r\n          }}\r\n        >\r\n          <h1 className=\"text-center mb-1\">Login</h1>\r\n          <AuthForm />\r\n        </Stack>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Redirect } from \"react-router\";\r\nimport useAuthentication from \"../hooks/useAuthentication\";\r\n\r\ninterface AuthComponentProps {\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst AuthRouteComponent = ({ children }: AuthComponentProps) => {\r\n  const { isAuth } = useAuthentication();\r\n  return <>{!isAuth ? <Redirect to=\"/login\" /> : children}</>;\r\n};\r\n\r\nexport default AuthRouteComponent;\r\n","import { Navbar, Container, Nav, Button } from \"react-bootstrap\";\r\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logOutLS } from \"../services/localStorage\";\r\n\r\nconst CustomNavbar = (): JSX.Element => {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Challenge Alkemy\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n            <Link to=\"/search\" className=\"nav-link\">\r\n              Choose a new hero\r\n            </Link>\r\n          </Nav>\r\n          <Nav className=\"align-items-center\">\r\n            <Nav.Link\r\n              href=\"https://github.com/JulianKominovic\"\r\n              rel=\"noopener norefferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <FaGithub style={{ fontSize: \"1.4rem\" }} />\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              eventKey={2}\r\n              href=\"https://www.linkedin.com/in/jkominovic/\"\r\n              rel=\"noopener norefferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <FaLinkedin style={{ fontSize: \"1.4rem\" }} />\r\n            </Nav.Link>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                logOutLS();\r\n              }}\r\n              variant=\"outline-secondary\"\r\n              className=\"font-lg\"\r\n            >\r\n              Log out\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n","export const getAllHeroesLS = () => {\r\n  return JSON.parse(window.localStorage.getItem(\"heroes\") || \"[]\");\r\n};\r\n\r\nexport const syncHeroesLS = (heroes: Array<any>) => {\r\n  window.localStorage.setItem(\"heroes\", JSON.stringify(heroes));\r\n};\r\n\r\nexport const logOutLS = () => {\r\n  window.localStorage.removeItem(\"token\");\r\n  window.location.reload();\r\n};\r\n","import { ListGroup, ProgressBar } from \"react-bootstrap\";\r\n\r\ninterface HomeStatsProps {\r\n  stat: any;\r\n  heroesList: any;\r\n}\r\n\r\nconst HomeStats = ({ stat, heroesList }: HomeStatsProps): JSX.Element => {\r\n  return (\r\n    <ListGroup.Item key={stat.property}>\r\n      <div className=\"me-auto\">\r\n        <div className=\"fw-bold\">\r\n          {stat.property.charAt(0).toUpperCase() + stat.property.slice(1)}\r\n        </div>\r\n      </div>\r\n      <ProgressBar\r\n        className=\"my-2\"\r\n        variant={\r\n          stat.value > (heroesList.length * 100) / 2 ? \"danger\" : \"warning\"\r\n        }\r\n        now={parseInt(stat.value)}\r\n        label={stat.value === \"null\" ? 0 : stat.value + \" pts.\"}\r\n        max={heroesList.length * 100}\r\n      />\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nexport default HomeStats;\r\n","import { useState, createContext, useEffect } from \"react\";\r\nimport { getAllHeroesLS, syncHeroesLS } from \"../services/localStorage\";\r\n\r\nexport const HeroesListContext = createContext();\r\n\r\nexport const HeroesListProvider = ({ children }) => {\r\n  const [heroesList, setHeroesList] = useState(getAllHeroesLS());\r\n  const getNumberGoodHeroes = () =>\r\n    heroesList.filter((hero) => hero.biography.alignment === \"good\").length;\r\n\r\n  const getNumberBadHeroes = () =>\r\n    heroesList.filter((hero) => hero.biography.alignment !== \"good\").length;\r\n\r\n  const [numberOfGoodHeroes, setNumberOfGoodHeroes] = useState(\r\n    getNumberGoodHeroes()\r\n  );\r\n  const [numberOfBadHeroes, setNumberOfBadHeroes] = useState(\r\n    getNumberBadHeroes()\r\n  );\r\n\r\n  useEffect(() => {\r\n    syncHeroesLS(heroesList);\r\n  }, [heroesList]);\r\n\r\n  return (\r\n    <HeroesListContext.Provider\r\n      value={{\r\n        heroesList,\r\n        setHeroesList,\r\n        numberOfGoodHeroes,\r\n        setNumberOfGoodHeroes,\r\n        numberOfBadHeroes,\r\n        setNumberOfBadHeroes,\r\n      }}\r\n    >\r\n      {children}\r\n    </HeroesListContext.Provider>\r\n  );\r\n};\r\n","import { HeroesListContext } from \"../context/HeroesListContext\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useHeroesList = () => {\r\n  const {\r\n    heroesList,\r\n    setHeroesList,\r\n    numberOfGoodHeroes,\r\n    numberOfBadHeroes,\r\n    setNumberOfBadHeroes,\r\n    setNumberOfGoodHeroes,\r\n  } = useContext(HeroesListContext);\r\n\r\n  const verifyNewHero = (hero: any): string => {\r\n    if (\r\n      heroesList.map((heroLocal: any) => heroLocal.id).indexOf(hero.id) !== -1\r\n    )\r\n      return \"You already have this hero.\";\r\n    if (hero.biography.alignment === \"bad\") {\r\n      if (numberOfBadHeroes >= 3) {\r\n        return \"Max amount of bad heroes reached.\";\r\n      }\r\n    }\r\n    if (hero.biography.alignment === \"good\") {\r\n      if (numberOfGoodHeroes >= 3) {\r\n        return \"Max amount of good heroes reached.\";\r\n      }\r\n    }\r\n    if (\r\n      hero.biography.alignment !== \"bad\" &&\r\n      hero.biography.alignment !== \"good\"\r\n    ) {\r\n      if (numberOfBadHeroes >= 3) {\r\n        return \"Max amount of bad heroes reached.\";\r\n      }\r\n    }\r\n    return \"Hero added!\";\r\n  };\r\n\r\n  const addHeroToList = (hero: any): any => {\r\n    const verifyNewHeroStatus: string = verifyNewHero(hero);\r\n    if (verifyNewHeroStatus === \"Hero added!\") {\r\n      if (hero.biography.alignment !== \"good\") {\r\n        if (numberOfBadHeroes < 3) {\r\n          setNumberOfBadHeroes(numberOfBadHeroes + 1);\r\n          setHeroesList((prev: any) => [...prev, hero]);\r\n        }\r\n      } else {\r\n        if (numberOfGoodHeroes < 3) {\r\n          setNumberOfGoodHeroes(numberOfGoodHeroes + 1);\r\n          setHeroesList((prev: any) => [...prev, hero]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return verifyNewHeroStatus;\r\n  };\r\n\r\n  const isHeroOnTeam = (id: number): boolean => {\r\n    return heroesList.findIndex((hero: any) => hero.id === id) === -1\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  const removeHeroById = (id: number) => {\r\n    heroesList[heroesList.findIndex((hero: any) => hero.id === id)].biography\r\n      .alignment !== \"good\"\r\n      ? setNumberOfBadHeroes(numberOfBadHeroes - 1)\r\n      : setNumberOfGoodHeroes(numberOfGoodHeroes - 1);\r\n\r\n    setHeroesList(heroesList.filter((hero: any) => hero.id !== id.toString()));\r\n  };\r\n\r\n  return {\r\n    heroesList,\r\n    addHeroToList,\r\n    removeHeroById,\r\n    isHeroOnTeam,\r\n  };\r\n};\r\n","import { Col, Row, Badge, Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdDelete, MdInfo } from \"react-icons/md\";\r\nimport { useHeroesList } from \"../hooks/useHeroesList\";\r\ninterface CardProps {\r\n  name?: string;\r\n  alignment?: string;\r\n  imageUrl?: string;\r\n  variant: \"empty\" | \"hero\";\r\n  id: number;\r\n}\r\n\r\nconst SuperHeroSmallCard = ({\r\n  name = \"\",\r\n  alignment = \"\",\r\n  imageUrl = \"\",\r\n  variant,\r\n  id,\r\n}: CardProps): JSX.Element => {\r\n  const { removeHeroById } = useHeroesList();\r\n  return (\r\n    <>\r\n      {variant === \"empty\" ? (\r\n        <Col>\r\n          <Link\r\n            to=\"/search\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n            className=\"text-secondary\"\r\n          >\r\n            <Card\r\n              className=\"border border-2 rounded-3 h-100\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                minWidth: \"120px\",\r\n              }}\r\n            >\r\n              <Card.Img\r\n                style={{ height: \"200px\", objectFit: \"cover\", opacity: 0.1 }}\r\n                variant=\"top\"\r\n                src=\"https://static.wixstatic.com/media/56086a_53b3a2b310894b929f88e63cb06c5106~mv2.png/v1/fill/w_240,h_240,al_c,q_85,usm_0.66_1.00_0.01/free-png-plus-sign-plus-icon-512.webp\"\r\n                alt={\"empty\"}\r\n              />\r\n              <Card.Body\r\n                className=\"text-center d-flex flex-column justify-content-between\"\r\n                style={{\r\n                  height: \"110px\",\r\n                  objectFit: \"cover\",\r\n                  objectPosition: \"top\",\r\n                }}\r\n              >\r\n                <Card.Title className=\"overflow-hidden\">Add hero</Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n      ) : (\r\n        <Col\r\n          style={{\r\n            minWidth: \"180px\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Card\r\n            className=\"border border-2 rounded-3 h-100\"\r\n            bg={alignment !== \"good\" ? \"dark\" : \"light\"}\r\n            text={alignment !== \"good\" ? \"light\" : \"dark\"}\r\n            border={alignment !== \"good\" ? \"danger\" : \"primary\"}\r\n          >\r\n            <Card.Img\r\n              style={{ height: \"200px\", objectFit: \"cover\" }}\r\n              variant=\"top\"\r\n              src={imageUrl}\r\n              alt={name + \" image\"}\r\n            />\r\n            <Card.Body\r\n              className=\"d-flex flex-column justify-content-between\"\r\n              style={{\r\n                height: \"180px\",\r\n                objectFit: \"cover\",\r\n                objectPosition: \"top\",\r\n              }}\r\n            >\r\n              <Card.Title\r\n                className=\"overflow-hidden\"\r\n                style={{\r\n                  height: \"60px\",\r\n                }}\r\n              >\r\n                {name}\r\n              </Card.Title>\r\n\r\n              <Badge bg={alignment !== \"good\" ? \"danger\" : \"primary\"}>\r\n                {alignment.toUpperCase()}\r\n              </Badge>\r\n\r\n              <Row className=\"mt-2\">\r\n                <Col>\r\n                  <Link to={`/details/${id}`}>\r\n                    <Button variant=\"outline-info\" className=\"w-100\">\r\n                      <MdInfo style={{ fontSize: \"20px\" }} />\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    variant=\"outline-danger\"\r\n                    className=\"w-100\"\r\n                    onClick={() => {\r\n                      removeHeroById(id);\r\n                    }}\r\n                  >\r\n                    <MdDelete style={{ fontSize: \"20px\" }} />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuperHeroSmallCard;\r\n","import { useHeroesList } from \"./useHeroesList\";\r\n\r\ninterface HeroesAvgStats {\r\n  property: string;\r\n  value: number;\r\n}\r\n\r\nconst useTeamStats = () => {\r\n  const { heroesList } = useHeroesList();\r\n  let avgStats = [\r\n    {\r\n      property: \"speed\",\r\n      value: 0,\r\n    },\r\n    {\r\n      property: \"intelligence\",\r\n      value: 0,\r\n    },\r\n    {\r\n      property: \"strength\",\r\n      value: 0,\r\n    },\r\n    {\r\n      property: \"durability\",\r\n      value: 0,\r\n    },\r\n    {\r\n      property: \"power\",\r\n      value: 0,\r\n    },\r\n    {\r\n      property: \"combat\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  const recalculateStats = (): Array<HeroesAvgStats> => {\r\n    heroesList.forEach((hero: any) => {\r\n      avgStats.forEach((prop) => {\r\n        prop.value =\r\n          prop.value +\r\n          parseInt(\r\n            hero.powerstats[prop.property] === \"null\"\r\n              ? \"0\"\r\n              : hero.powerstats[prop.property]\r\n          );\r\n      });\r\n    });\r\n    return avgStats.sort((prev, next) => {\r\n      return next.value - prev.value;\r\n    });\r\n  };\r\n\r\n  const recalculateAvgWeight = (): number => {\r\n    let weightAccumulator = 0;\r\n    heroesList.forEach((hero: any) => {\r\n      weightAccumulator += parseInt(hero.appearance.weight[1]);\r\n    });\r\n    return weightAccumulator / heroesList.length;\r\n  };\r\n\r\n  const recalculateAvgHeight = (): number => {\r\n    let heightAccumulator = 0;\r\n    heroesList.forEach(\r\n      (hero: any) => (heightAccumulator += parseInt(hero.appearance.height[1]))\r\n    );\r\n    return heightAccumulator / heroesList.length;\r\n  };\r\n\r\n  return {\r\n    recalculateStats,\r\n    recalculateAvgWeight,\r\n    recalculateAvgHeight,\r\n  };\r\n};\r\n\r\nexport default useTeamStats;\r\n","import { Container, Row, Card, ListGroup } from \"react-bootstrap\";\r\nimport AuthRouteComponent from \"../components/AuthRouteComponent\";\r\nimport CustomNavbar from \"../components/CustomNavbar\";\r\nimport HomeStats from \"../components/HomeStats\";\r\nimport SuperHeroSmallCard from \"../components/SuperHeroSmallCard\";\r\nimport { useHeroesList } from \"../hooks/useHeroesList\";\r\nimport useTeamStats from \"../hooks/useTeamStats\";\r\n\r\nconst HEROES_SLOTS = [0, 1, 2, 3, 4, 5];\r\n\r\nconst Home = () => {\r\n  const { heroesList } = useHeroesList();\r\n  const { recalculateStats, recalculateAvgWeight, recalculateAvgHeight } =\r\n    useTeamStats();\r\n\r\n  return (\r\n    <AuthRouteComponent>\r\n      <CustomNavbar></CustomNavbar>\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <h1 className=\"text-center my-5\">Superheroes challenge - Alkemy</h1>\r\n        </Row>\r\n        <Row className=\"gap-2 p-4\">\r\n          <Card className=\"container-fluid\">\r\n            <Row>\r\n              <Card.Header as=\"h2\">Your team</Card.Header>\r\n            </Row>\r\n            <Row className=\"py-4 gap-2\">\r\n              {heroesList &&\r\n                HEROES_SLOTS.map((indexHero, i) =>\r\n                  heroesList[indexHero] === undefined ? (\r\n                    <SuperHeroSmallCard key={i} variant=\"empty\" />\r\n                  ) : (\r\n                    <SuperHeroSmallCard\r\n                      key={heroesList[indexHero].name}\r\n                      id={heroesList[indexHero].id}\r\n                      alignment={heroesList[indexHero].biography.alignment}\r\n                      name={heroesList[indexHero].name}\r\n                      imageUrl={heroesList[indexHero].image.url}\r\n                      variant=\"hero\"\r\n                    />\r\n                  )\r\n                )}\r\n            </Row>\r\n          </Card>\r\n        </Row>\r\n        <Row>\r\n          <Container className=\"p-4\">\r\n            <Card>\r\n              <Card.Header as=\"h3\">Team stats</Card.Header>\r\n              <Card.Title className=\"p-4\">\r\n                An average estimation between all your team's members\r\n              </Card.Title>\r\n              <ListGroup as=\"li\" variant=\"flush\">\r\n                <ListGroup.Item className=\"px-4\">\r\n                  {`Average weight: ${\r\n                    Math.round(recalculateAvgWeight()) || \"0\"\r\n                  } kg.`}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"px-4\">\r\n                  {`Average height: ${\r\n                    Math.round(recalculateAvgHeight()) || \"0\"\r\n                  } cm.`}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n              <Card.Body>\r\n                <ListGroup variant=\"flush\" as=\"li\">\r\n                  {recalculateStats().map((stat) => (\r\n                    <HomeStats\r\n                      key={stat.property}\r\n                      stat={stat}\r\n                      heroesList={heroesList}\r\n                    />\r\n                  ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n        </Row>\r\n      </Container>\r\n    </AuthRouteComponent>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Formik } from \"formik\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Alert,\r\n  Card,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SearchingSchema } from \"../schemas/YupSchemas\";\r\n\r\nconst SearchForm = ({\r\n  setSearchDone,\r\n  setIsSearching,\r\n  isSearching,\r\n  setSearchingResult,\r\n  searchingParam,\r\n}: any): JSX.Element => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container className=\"my-2\">\r\n      <Card className=\"p-4 my-4 mx-auto\" style={{ maxWidth: \"768px\" }}>\r\n        <Formik\r\n          initialValues={{ search: searchingParam.name || \"\" }}\r\n          onSubmit={(values) => {\r\n            setIsSearching(true);\r\n            setSearchDone(false);\r\n            setSearchingResult(\"\");\r\n            history.replace(`/search/${values.search}`);\r\n          }}\r\n          validationSchema={SearchingSchema}\r\n        >\r\n          {(props) => (\r\n            <Form onSubmit={props.handleSubmit}>\r\n              <Row className=\"align-items-end justify-content-between\">\r\n                <Form.Label>Search a new hero</Form.Label>\r\n\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Type some name...\"\r\n                  onChange={props.handleChange}\r\n                  onBlur={props.handleBlur}\r\n                  value={props.values.search}\r\n                  name=\"search\"\r\n                ></Form.Control>\r\n\r\n                <Button variant=\"primary\" className=\"my-4\" type=\"submit\">\r\n                  <>\r\n                    {isSearching ? (\r\n                      <>\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </>\r\n                    ) : (\r\n                      \"Search\"\r\n                    )}\r\n                  </>\r\n                </Button>\r\n                {props.errors.search && (\r\n                  <Alert variant=\"danger\" className=\"m-0 py-2\">\r\n                    {props.errors.search}\r\n                  </Alert>\r\n                )}\r\n              </Row>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","const getBestStatOfHero = (hero: any): string => {\r\n  const sortArray = Object.entries(hero.powerstats).sort((a: any, b: any) => {\r\n    const statPrev = b[1] === \"null\" ? \"0\" : b[1];\r\n    const statCurr = a[1] === \"null\" ? \"0\" : a[1];\r\n    return parseInt(statPrev) - parseInt(statCurr);\r\n  });\r\n\r\n  if (sortArray[0][1] === \"null\") {\r\n    return `${\r\n      sortArray[0][0].charAt(0).toUpperCase() + sortArray[0][0].slice(1)\r\n    } 0`;\r\n  }\r\n\r\n  return `${\r\n    sortArray[0][0].charAt(0).toUpperCase() + sortArray[0][0].slice(1)\r\n  } ${sortArray[0][1]}`;\r\n};\r\n\r\nexport default getBestStatOfHero;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHeroesList } from \"../hooks/useHeroesList\";\r\n\r\ninterface ButtonProps {\r\n  hero: any;\r\n}\r\n\r\nconst AddOrRemoveButton = ({ hero }: ButtonProps): JSX.Element => {\r\n  const { addHeroToList, isHeroOnTeam, removeHeroById } = useHeroesList();\r\n\r\n  const [addedMessage, setAddedMessage] = useState<string>(\"\");\r\n  const resetAddedMessage = () => setAddedMessage(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      resetAddedMessage();\r\n    }, 4000);\r\n    return () => {\r\n      window.clearTimeout(timeout);\r\n    };\r\n  }, [addedMessage]);\r\n\r\n  return (\r\n    <>\r\n      {isHeroOnTeam(hero.id) ? (\r\n        <Button\r\n          onClick={() => {\r\n            removeHeroById(hero.id);\r\n            setAddedMessage(\"Hero removed!\");\r\n          }}\r\n          variant=\"danger\"\r\n        >\r\n          Remove from team\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          onClick={() => {\r\n            setAddedMessage(addHeroToList(hero));\r\n          }}\r\n          variant={\r\n            addedMessage === \"Hero added!\"\r\n              ? \"success\"\r\n              : addedMessage === \"\"\r\n              ? \"primary\"\r\n              : \"danger\"\r\n          }\r\n        >\r\n          {addedMessage === \"\" ? \"Choose a hero\" : addedMessage}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddOrRemoveButton;\r\n","import {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge,\r\n  Button,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { FaBookOpen } from \"react-icons/fa\";\r\nimport { ImPower } from \"react-icons/im\";\r\nimport { useState } from \"react\";\r\nimport HomeStats from \"./HomeStats\";\r\nimport getBestStatOfHero from \"../utils/getBestStatOfHero\";\r\nimport { useHistory } from \"react-router\";\r\nimport AddOrRemoveButton from \"./AddOrRemoveButton\";\r\nconst SuperHeroBigCard = (hero: any) => {\r\n  const history = useHistory();\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        minWidth: \"16rem\",\r\n        width: \"18rem\",\r\n        position: \"relative\",\r\n      }}\r\n      className={`m-2 border-1 rounded ${\r\n        hero.biography.alignment !== \"good\"\r\n          ? \"text-light bg-dark border border-danger\"\r\n          : \"border border-primary\"\r\n      }`}\r\n    >\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={hero.image.url}\r\n        className=\"\"\r\n        style={{\r\n          height: \"380px\",\r\n        }}\r\n        height=\"380px\"\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{hero.name}</Card.Title>\r\n        <Card.Text className=\"mb-1\">{hero.biography[\"full-name\"]}</Card.Text>\r\n        <Badge bg={hero.biography.alignment !== \"good\" ? \"danger\" : \"primary\"}>\r\n          {hero.biography.alignment.toUpperCase()}\r\n        </Badge>\r\n      </Card.Body>\r\n      <ListGroup className={`list-group-flush`}>\r\n        <ListGroupItem\r\n          className={\r\n            hero.biography.alignment !== \"good\" ? \"text-light bg-dark\" : \"\"\r\n          }\r\n        >\r\n          <FaBookOpen></FaBookOpen>\r\n          <span className=\"mx-2\">{hero.biography.publisher}</span>\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          className={\r\n            hero.biography.alignment !== \"good\" ? \"text-light bg-dark\" : \"\"\r\n          }\r\n        >\r\n          <ImPower></ImPower>\r\n          <span className=\"mx-2\">{getBestStatOfHero(hero)}</span>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n      <Card.Body>\r\n        <Col className=\"mb-2\">\r\n          <AddOrRemoveButton hero={hero}></AddOrRemoveButton>\r\n        </Col>\r\n        <Col>\r\n          {showDetails && (\r\n            <Card\r\n              className=\"px-2 py-4\"\r\n              style={{\r\n                width: \"18rem\",\r\n                height: \"101%\",\r\n                minWidth: \"16rem\",\r\n                position: \"absolute\",\r\n                left: \"-1px\",\r\n                top: \"-1px\",\r\n              }}\r\n            >\r\n              <Card.Title className=\"text-dark text-center\">Stats</Card.Title>\r\n              <Card.Body className=\"bg-opacity-50 bg-body\">\r\n                <ListGroup variant=\"flush\">\r\n                  {Object.entries(hero.powerstats).map((stat: any) => (\r\n                    <HomeStats\r\n                      key={hero.name + stat[0]}\r\n                      heroesList={[hero]}\r\n                      stat={{\r\n                        property: stat[0],\r\n                        value: stat[1],\r\n                      }}\r\n                    />\r\n                  ))}\r\n\r\n                  <Button\r\n                    className=\"my-4\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      history.replace(`/details/${hero.id}`);\r\n                    }}\r\n                  >\r\n                    More...\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      setShowDetails((prev) => !prev);\r\n                    }}\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              setShowDetails((prev) => !prev);\r\n            }}\r\n          >\r\n            Details\r\n          </Button>\r\n        </Col>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SuperHeroBigCard;\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport const searchHero = (search: string) => {\r\n  return axios.get(`https://heroes-alkemy.herokuapp.com/api/search/${search}`);\r\n};\r\n\r\nexport const getHeroDetails = (id: number) => {\r\n  return axios.get(`https://heroes-alkemy.herokuapp.com/api/details/${id}`);\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Spinner, Alert } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport AuthRouteComponent from \"../components/AuthRouteComponent\";\r\nimport CustomNavbar from \"../components/CustomNavbar\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SuperHeroBigCard from \"../components/SuperHeroBigCard\";\r\nimport { SearchingSchema } from \"../schemas/YupSchemas\";\r\nimport { searchHero } from \"../services/apiCalls\";\r\n\r\nconst Search = () => {\r\n  const params: any = useParams();\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [searchDone, setSearchDone] = useState<boolean>(false);\r\n  const [isSearching, setIsSearching] = useState<boolean>(false);\r\n  const [searchingResult, setSearchingResult] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (params.name !== undefined) {\r\n      SearchingSchema.validate({ search: params.name })\r\n        .then((res) => search())\r\n        .catch((err) => setSearchingResult(err.errors[0]));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params]);\r\n\r\n  function search() {\r\n    setIsSearching(true);\r\n    setSearchDone(false);\r\n    setSearchingResult(\"\");\r\n    searchHero(params[\"name\"])\r\n      .then((res: any) => {\r\n        setHeroes(res.data.results);\r\n        setSearchDone(true);\r\n        setIsSearching(false);\r\n\r\n        res.data.results === undefined\r\n          ? setSearchingResult(\"An error has ocurred. Try again.\")\r\n          : setSearchingResult(\"ok\");\r\n      })\r\n      .catch((err) => setSearchingResult(\"error:\" + err));\r\n  }\r\n\r\n  return (\r\n    <AuthRouteComponent>\r\n      <CustomNavbar />\r\n      <SearchForm\r\n        searchingParam={params}\r\n        setSearchDone={setSearchDone}\r\n        setIsSearching={setIsSearching}\r\n        isSearching={isSearching}\r\n        setSearchingResult={setSearchingResult}\r\n      />\r\n      <Container className=\"pb-5 pt-2\" style={{ maxWidth: \"1024px\" }}>\r\n        <Row>\r\n          <>\r\n            {searchDone &&\r\n              searchingResult === \"ok\" &&\r\n              heroes.map((hero, i) => (\r\n                <Col className=\"d-flex justify-content-center\" key={i}>\r\n                  <SuperHeroBigCard {...hero} />\r\n                </Col>\r\n              ))}\r\n            {isSearching && (\r\n              <Col className=\"text-center my-5\">\r\n                <Spinner animation=\"grow\" />\r\n              </Col>\r\n            )}\r\n            {searchingResult !== \"ok\" && searchingResult.length !== 0 && (\r\n              <Alert variant=\"danger\">{searchingResult}</Alert>\r\n            )}\r\n          </>\r\n        </Row>\r\n      </Container>\r\n    </AuthRouteComponent>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { ListGroup } from \"react-bootstrap\";\r\n\r\nconst HeroFeatureList = (prop: any) => {\r\n  return (\r\n    <>\r\n      {Object.entries(prop).map((stat: any) => (\r\n        <ListGroup.Item className=\"my-1 px-0 py-2\" key={stat[0]}>\r\n          <b>{stat[0].charAt(0).toUpperCase() + stat[0].slice(1)}</b>\r\n          {`: ${stat[1]}`}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeroFeatureList;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  ListGroup,\r\n  Badge,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddOrRemoveButton from \"../components/AddOrRemoveButton\";\r\nimport AuthRouteComponent from \"../components/AuthRouteComponent\";\r\nimport CustomNavbar from \"../components/CustomNavbar\";\r\nimport HeroFeatureList from \"../components/HeroFeatureList\";\r\nimport HomeStats from \"../components/HomeStats\";\r\nimport { getHeroDetails } from \"../services/apiCalls\";\r\n\r\nconst Details = (): JSX.Element => {\r\n  const params: any = useParams();\r\n  const [hero, setHero] = useState<any>({});\r\n  const [status, setStatus] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setStatus(\"loading\");\r\n    getHeroDetails(parseInt(params.id))\r\n      .then((res: any) => {\r\n        if (res.data.response === \"success\") {\r\n          setHero(res.data);\r\n          setStatus(\"ok\");\r\n        } else {\r\n          setStatus(res.data.error);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [params]);\r\n\r\n  return (\r\n    <AuthRouteComponent>\r\n      <CustomNavbar></CustomNavbar>\r\n\r\n      <Container\r\n        className=\"px-4 pb-5 align-items-center\"\r\n        style={{ maxWidth: \"1024px\" }}\r\n      >\r\n        {status === \"ok\" ? (\r\n          <Row>\r\n            <Col>\r\n              <Card style={{ width: \"18rem\" }} className=\"my-4\">\r\n                <Card.Img\r\n                  src={hero.image.url}\r\n                  alt={`${hero.name} image`}\r\n                ></Card.Img>\r\n                <Card.Body>\r\n                  <Card.Title>{hero.name}</Card.Title>\r\n                  <Card.Subtitle>{hero.biography[\"full-name\"]}</Card.Subtitle>\r\n                  <ListGroup variant=\"flush\">\r\n                    <HeroFeatureList {...hero.appearance} />\r\n                  </ListGroup>\r\n                  <AddOrRemoveButton hero={hero}></AddOrRemoveButton>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Row style={{ placeContent: \"center\" }}>\r\n                <Card style={{ width: \"18rem\" }} className=\"my-4\">\r\n                  <Card.Body>\r\n                    <Card.Title>Work</Card.Title>\r\n                    <ListGroup variant=\"flush\">\r\n                      <HeroFeatureList {...hero.work} />\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n              <Row style={{ placeContent: \"center\" }}>\r\n                <Card style={{ width: \"18rem\" }} className=\"my-4\">\r\n                  <Card.Body>\r\n                    <Card.Title>Powerstats</Card.Title>\r\n                    <ListGroup variant=\"flush\">\r\n                      {Object.entries(hero.powerstats).map((stat: any) => (\r\n                        <HomeStats\r\n                          key={stat[0]}\r\n                          stat={{\r\n                            property: stat[0],\r\n                            value: stat[1],\r\n                          }}\r\n                          heroesList={[hero]}\r\n                        />\r\n                      ))}\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Card style={{ width: \"18rem\" }} className=\"my-4\">\r\n                  <Card.Body>\r\n                    <Card.Title>Biography</Card.Title>\r\n\r\n                    <ListGroup variant=\"flush\">\r\n                      <HeroFeatureList {...hero.biography} />\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n              <Row>\r\n                <Badge\r\n                  style={{ width: \"18rem\" }}\r\n                  className=\"py-3\"\r\n                  bg={\r\n                    hero.biography.alignment !== \"good\" ? \"danger\" : \"primary\"\r\n                  }\r\n                >\r\n                  {hero.biography.alignment.toUpperCase()}\r\n                </Badge>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        ) : status === \"loading\" ? (\r\n          <Row className=\"my-5 justify-content-center\">\r\n            <Spinner\r\n              className=\"m-5 p-5\"\r\n              style={{ textAlign: \"center\" }}\r\n              animation=\"border\"\r\n              role=\"status\"\r\n            >\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          </Row>\r\n        ) : (\r\n          <Alert className=\"my-5\" variant=\"danger\">\r\n            {status}\r\n          </Alert>\r\n        )}\r\n      </Container>\r\n    </AuthRouteComponent>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import \"./App.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Home from \"./pages/Home\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport { HeroesListProvider } from \"./context/HeroesListContext\";\r\nimport Search from \"./pages/Search\";\r\nimport Details from \"./pages/Details\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <HeroesListProvider>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/search/:name?\" component={Search} />\r\n            <Route exact path=\"/details/:id\" component={Details} />\r\n          </Switch>\r\n        </Router>\r\n      </HeroesListProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}